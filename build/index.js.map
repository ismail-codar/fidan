{"version":3,"file":"index.js","sources":["../src/evented-array.ts","../src/f.ts","../src/reconcile.ts","../src/dom.ts","../src/reuse-nodes.ts","../src/html.ts","../src/util.ts","../src/context.ts","../src/dom-tree.ts","../src/observable.ts","../src/index.ts"],"sourcesContent":["export type ArrayMutableMethods =\n  | \"copyWithin\" // TODO ArrayMutableMethods copyWithin\n  | \"fill\" // TODO ArrayMutableMethods fill\n  | \"pop\"\n  | \"push\"\n  | \"reverse\" // TODO ArrayMutableMethods reverse\n  | \"shift\"\n  | \"sort\" // TODO ArrayMutableMethods sort\n  | \"splice\"\n  | \"unshift\";\n\n// TODO concat vs..\n\nexport function EventedArray(items) {\n  var _self = this,\n    _array = [];\n\n  _self._handlers = {\n    itemadded: [],\n    itemremoved: [],\n    itemset: [],\n    beforemulti: [],\n    aftermulti: []\n  };\n\n  function defineIndexProperty(index) {\n    if (!(index in _self)) {\n      Object.defineProperty(_self, index, {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n          return _array[index];\n        },\n        set: function(v) {\n          _array[index] = v;\n          raiseEvent({\n            type: \"itemset\",\n            index: index,\n            item: v\n          });\n        }\n      });\n    }\n  }\n\n  function raiseEvent(event) {\n    _self._handlers[event.type].forEach(function(h) {\n      h.call(_self, event);\n    });\n  }\n\n  _self.on = function(eventName, handler) {\n    _self._handlers[eventName].push(handler);\n  };\n\n  _self.off = function(eventName, handler) {\n    var h = _self._handlers[eventName];\n    var ln = h.length;\n    while (--ln >= 0) {\n      if (h[ln] === handler) {\n        h.splice(ln, 1);\n      }\n    }\n  };\n\n  _self.push = function() {\n    var index;\n    arguments.length > 1 &&\n      raiseEvent({\n        type: \"beforemulti\"\n      });\n    for (var i = 0, ln = arguments.length; i < ln; i++) {\n      index = _array.length;\n      _array.push(arguments[i]);\n      defineIndexProperty(index);\n      raiseEvent({\n        type: \"itemadded\",\n        index: index,\n        item: arguments[i]\n      });\n    }\n    arguments.length > 1 &&\n      raiseEvent({\n        type: \"aftermulti\"\n      });\n    return _array.length;\n  };\n\n  _self.pop = function() {\n    if (_array.length > -1) {\n      var index = _array.length - 1,\n        item = _array.pop();\n      delete _self[index];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: index,\n        item: item\n      });\n      return item;\n    }\n  };\n\n  _self.unshift = function() {\n    for (var i = 0, ln = arguments.length; i < ln; i++) {\n      _array.splice(i, 0, arguments[i]);\n      defineIndexProperty(_array.length - 1);\n      raiseEvent({\n        type: \"itemadded\",\n        index: i,\n        item: arguments[i]\n      });\n    }\n    for (; i < _array.length; i++) {\n      raiseEvent({\n        type: \"itemset\",\n        index: i,\n        item: _array[i]\n      });\n    }\n    return _array.length;\n  };\n\n  _self.shift = function() {\n    if (_array.length > -1) {\n      var item = _array.shift();\n      delete _self[_array.length];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: 0,\n        item: item\n      });\n      return item;\n    }\n  };\n\n  _self.splice = function(index, howMany /*, element1, element2, ... */) {\n    var removed = [],\n      item,\n      pos;\n\n    index = index == null ? 0 : index < 0 ? _array.length + index : index;\n\n    howMany =\n      howMany == null ? _array.length - index : howMany > 0 ? howMany : 0;\n\n    while (howMany--) {\n      item = _array.splice(index, 1)[0];\n      removed.push(item);\n      delete _self[_array.length];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: index + removed.length - 1,\n        item: item\n      });\n    }\n\n    for (var i = 2, ln = arguments.length; i < ln; i++) {\n      _array.splice(index, 0, arguments[i]);\n      defineIndexProperty(_array.length - 1);\n      raiseEvent({\n        type: \"itemadded\",\n        index: index,\n        item: arguments[i]\n      });\n      index++;\n    }\n\n    return removed;\n  };\n\n  Object.defineProperty(_self, \"length\", {\n    configurable: false,\n    enumerable: false,\n    get: function() {\n      return _array.length;\n    },\n    set: function(value) {\n      var n = Number(value);\n      var length = _array.length;\n      if (n % 1 === 0 && n >= 0) {\n        if (n < length) {\n          _self.splice(n);\n        } else if (n > length) {\n          _self.push.apply(_self, new Array(n - length));\n        }\n      } else {\n        throw new RangeError(\"Invalid array length\");\n      }\n      _array.length = n;\n      return value;\n    }\n  });\n\n  Object.defineProperty(_self, \"innerArray\", {\n    configurable: false,\n    enumerable: false,\n    get: function() {\n      return _array;\n    },\n    set: function(v) {\n      _array = v;\n      for (var i = 0; i < v.length; i++) {\n        defineIndexProperty(i);\n      }\n    }\n  });\n\n  Object.getOwnPropertyNames(Array.prototype).forEach(function(name) {\n    if (!(name in _self)) {\n      Object.defineProperty(_self, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Array.prototype[name]\n      });\n    }\n  });\n\n  _self.setEventsFrom = function(val) {\n    _self.on = val.on;\n    _self.off = val.off;\n    _self._handlers = val._handlers;\n  };\n\n  _self.toJSON = () => {\n    return _array;\n  };\n\n  if (Array.isArray(items)) {\n    _self.push.apply(_self, items);\n  }\n}\n","import { EventedArray } from \"./evented-array\";\r\n\r\nexport interface FidanValue<T> {\r\n  (val?: T): T;\r\n  readonly $val: T;\r\n  readonly $next: T;\r\n  freezed: boolean;\r\n}\r\n\r\nexport type FidanArrayEventType =\r\n  | \"itemadded\"\r\n  | \"itemset\"\r\n  | \"itemremoved\"\r\n  | \"beforemulti\"\r\n  | \"aftermulti\";\r\n\r\nexport interface EventedArrayReturnType<T> {\r\n  on: any;\r\n  off: any;\r\n  innerArray: T[];\r\n  setEventsFrom: (val: EventedArrayReturnType<T>) => void;\r\n}\r\n\r\nexport interface FidanArray<T> {\r\n  (val?: T[]): T[] & EventedArrayReturnType<T>;\r\n  readonly $val: T[] & EventedArrayReturnType<T>;\r\n  readonly $next: T[] & EventedArrayReturnType<T>;\r\n  freezed: boolean;\r\n}\r\n\r\nexport const array = <T>(items: T[]): FidanArray<T> => {\r\n  const arr = value(new EventedArray(items)) as any;\r\n  arr.toJSON = () => arr.$val.innerArray;\r\n\r\n  return arr;\r\n};\r\n\r\nexport const on = (\r\n  arr: any[],\r\n  type: FidanArrayEventType,\r\n  callback: (e: { item: any; index: number }) => void\r\n) => {\r\n  arr[\"$val\"].on(type, callback);\r\n};\r\n\r\nexport const off = (\r\n  arr: any[],\r\n  type: FidanArrayEventType,\r\n  callback: (e: { item: any; index: number }) => void\r\n) => {\r\n  arr[\"$val\"].off(type, callback);\r\n};\r\n\r\nexport const value = <T>(val?: T, freezed?: boolean): FidanValue<T> => {\r\n  const innerFn: any = (val?) => {\r\n    if (val === undefined) {\r\n      return innerFn[\"$val\"];\r\n    } else {\r\n      if (Array.isArray(val)) {\r\n        val = new EventedArray(val.slice(0));\r\n        val.setEventsFrom(innerFn[\"$val\"]);\r\n      } else if (val && val.hasOwnProperty(\"innerArray\")) {\r\n        var arr = new EventedArray(val.innerArray.slice(0));\r\n        arr.setEventsFrom(val);\r\n        val = arr;\r\n      }\r\n      let depends = innerFn[\"bc_depends\"];\r\n      for (var i = 0; i < depends.length; i++) {\r\n        !depends[i][\"freezed\"] &&\r\n          depends[i].beforeCompute(val, innerFn[\"$val\"], innerFn);\r\n      }\r\n      innerFn[\"$val\"] = val;\r\n      depends = innerFn[\"c_depends\"];\r\n      for (var i = 0; i < depends.length; i++) {\r\n        !depends[i][\"freezed\"] && depends[i](depends[i].compute(val));\r\n      }\r\n    }\r\n  };\r\n\r\n  innerFn[\"$val\"] = val;\r\n  innerFn[\"freezed\"] = freezed;\r\n  innerFn[\"bc_depends\"] = [];\r\n  innerFn[\"c_depends\"] = [];\r\n  innerFn.toString = innerFn.toJSON = () => innerFn[\"$val\"].toString();\r\n  return innerFn;\r\n};\r\n\r\nexport const computeBy = <T>(\r\n  initial: FidanValue<T>,\r\n  fn: (val?: T, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  var cmp = value(undefined);\r\n  cmp[\"compute\"] = fn;\r\n  cmp(fn(initial.$val, cmp));\r\n  args.splice(0, 0, initial);\r\n  for (var i = 0; i < args.length; i++) args[i][\"c_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\nexport const beforeComputeBy = <T>(\r\n  initial: FidanValue<T>,\r\n  fn: (nextValue?, prevValue?, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  var cmp = value(undefined);\r\n  cmp[\"beforeCompute\"] = fn;\r\n  cmp(fn(initial.$val, undefined, cmp));\r\n  args.splice(0, 0, initial);\r\n  for (var i = 0; i < args.length; i++) args[i][\"bc_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\nexport const compute = <T>(\r\n  fn: (val: T, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  const cmp = value(undefined);\r\n  cmp[\"compute\"] = fn;\r\n  cmp(fn(undefined, cmp));\r\n  for (var i = 0; i < args.length; i++) args[i][\"c_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\nexport const beforeCompute = <T>(\r\n  fn: (nextValue?: T, prevValue?: T, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  const cmp = value(undefined);\r\n  cmp[\"beforeCompute\"] = fn;\r\n  cmp(fn(undefined, undefined, cmp));\r\n  for (var i = 0; i < args.length; i++) args[i][\"bc_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\n// TODO typedCompute, typedValue ...\r\n// export const computeReturn = <T>(fn: () => T, ...args: any[]): T =>\r\n//   initCompute(fn, ...args) as any;\r\n\r\n// export const setCompute = (prev: any, fn: () => void, ...args: any[]) => {\r\n//   destroy(prev);\r\n//   return initCompute(prev, fn, ...args);\r\n// };\r\n\r\nexport const destroy = (item: any) => {\r\n  delete item[\"compute\"];\r\n  delete item[\"c_depends\"];\r\n};\r\n","// https://github.com/Freak613/stage0/blob/master/reconcile.js\n\nexport const reconcile = (\n  parent,\n  renderedValues,\n  data,\n  createFn,\n  noOp,\n  beforeNode?,\n  afterNode?\n) => {\n  // Fast path for clear\n  if (data.length === 0) {\n    if (beforeNode !== undefined || afterNode !== undefined) {\n      let node =\n          beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n        tmp;\n\n      if (afterNode === undefined) afterNode = null;\n\n      while (node !== afterNode) {\n        tmp = node.nextSibling;\n        parent.removeChild(node);\n        node = tmp;\n      }\n    } else {\n      parent.textContent = \"\";\n    }\n    return;\n  }\n\n  // Fast path for create\n  if (renderedValues.length === 0) {\n    let node,\n      mode = afterNode !== undefined ? 1 : 0;\n    for (let i = 0, len = data.length; i < len; i++) {\n      node = createFn(data[i]);\n      mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node);\n    }\n    return;\n  }\n\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = renderedValues.length - 1,\n    newEnd = data.length - 1,\n    a,\n    b,\n    prevStartNode = beforeNode ? beforeNode.nextSibling : parent.firstChild,\n    newStartNode = prevStartNode,\n    prevEndNode = afterNode ? afterNode.previousSibling : parent.lastChild,\n    newEndNode = prevEndNode;\n\n  fixes: while (loop) {\n    loop = false;\n    let _node;\n\n    // Skip prefix\n    (a = renderedValues[prevStart]), (b = data[newStart]);\n    while (a === b) {\n      noOp(b, a);\n      prevStart++;\n      newStart++;\n      newStartNode = prevStartNode = prevStartNode.nextSibling;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = renderedValues[prevStart];\n      b = data[newStart];\n    }\n\n    // Skip suffix\n    (a = renderedValues[prevEnd]), (b = data[newEnd]);\n    while (a === b) {\n      noOp(b, a);\n      prevEnd--;\n      newEnd--;\n      afterNode = prevEndNode;\n      newEndNode = prevEndNode = prevEndNode.previousSibling;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = renderedValues[prevEnd];\n      b = data[newEnd];\n    }\n\n    // Fast path to swap backward\n    (a = renderedValues[prevEnd]), (b = data[newStart]);\n    while (a === b) {\n      loop = true;\n      noOp(b, a);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, newStartNode);\n      newEndNode = prevEndNode = _node;\n      newStart++;\n      prevEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = renderedValues[prevEnd];\n      b = data[newStart];\n    }\n\n    // Fast path to swap forward\n    (a = renderedValues[prevStart]), (b = data[newEnd]);\n    while (a === b) {\n      loop = true;\n      noOp(b, a);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, afterNode);\n      prevStart++;\n      afterNode = newEndNode = prevStartNode;\n      prevStartNode = _node;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = renderedValues[prevStart];\n      b = data[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while (prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      let node,\n        mode = afterNode ? 1 : 0;\n      while (newStart <= newEnd) {\n        node = createFn(data[newStart]);\n        mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node);\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  // Positions for reusing nodes from current DOM state\n  const P = new Array(newEnd + 1 - newStart);\n  for (let i = newStart; i <= newEnd; i++) P[i] = -1;\n\n  // Index to resolve position from current to new\n  const I = new Map();\n  for (let i = newStart; i <= newEnd; i++) I.set(data[i], i);\n\n  let reusingNodes = newStart + data.length - 1 - newEnd,\n    toRemove = [];\n\n  for (let i = prevStart; i <= prevEnd; i++) {\n    if (I.has(renderedValues[i])) {\n      P[I.get(renderedValues[i])] = i;\n      reusingNodes++;\n    } else {\n      toRemove.push(i);\n    }\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    if (beforeNode !== undefined || afterNode !== undefined) {\n      let node =\n          beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n        tmp;\n\n      if (afterNode === undefined) afterNode = null;\n\n      while (node !== afterNode) {\n        tmp = node.nextSibling;\n        parent.removeChild(node);\n        node = tmp;\n        prevStart++;\n      }\n    } else {\n      parent.textContent = \"\";\n    }\n\n    let node,\n      mode = afterNode ? 1 : 0;\n    for (let i = newStart; i <= newEnd; i++) {\n      node = createFn(data[i]);\n      mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node);\n    }\n\n    return;\n  }\n\n  // What else?\n  const longestSeq = longestPositiveIncreasingSubsequence(P, newStart);\n\n  // Collect nodes to work with them\n  const nodes = [];\n  let tmpC = prevStartNode;\n  for (let i = prevStart; i <= prevEnd; i++) {\n    nodes[i] = tmpC;\n    tmpC = tmpC.nextSibling;\n  }\n\n  for (let i = 0; i < toRemove.length; i++)\n    parent.removeChild(nodes[toRemove[i]]);\n\n  let lisIdx = longestSeq.length - 1,\n    tmpD;\n  for (let i = newEnd; i >= newStart; i--) {\n    if (longestSeq[lisIdx] === i) {\n      afterNode = nodes[P[longestSeq[lisIdx]]];\n      noOp(data[i], renderedValues[i]);\n      lisIdx--;\n    } else {\n      if (P[i] === -1) {\n        tmpD = createFn(data[i]);\n      } else {\n        tmpD = nodes[P[i]];\n        noOp(data[i], renderedValues[i]);\n      }\n      parent.insertBefore(tmpD, afterNode);\n      afterNode = tmpD;\n    }\n  }\n};\n\nexport default reconcile;\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  var seq = [],\n    is = [],\n    l = -1,\n    pre = new Array(ns.length);\n\n  for (var i = newStart, len = ns.length; i < len; i++) {\n    var n = ns[i];\n    if (n < 0) continue;\n    var j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l] = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  var lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    var mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n","import { FidanArray, beforeComputeBy } from \"./f\";\nimport { reuseNodes } from \"./reuse-nodes\";\nimport reconcile from \"./reconcile\";\n\nexport const insertToDom = (parentElement, index, itemElement) => {\n  const typeOf = typeof itemElement;\n  if (typeOf === \"function\") {\n    itemElement(parentElement);\n  } else {\n    if (typeOf !== \"object\") {\n      itemElement = document.createTextNode(itemElement);\n    }\n    parentElement.insertBefore(itemElement, parentElement.children[index]);\n  }\n};\n\nexport const arrayMap = <T>(\n  arr: FidanArray<T>,\n  parentDom: Node & ParentNode,\n  renderReturn: (item: any, idx?: number, isInsert?: boolean) => void,\n  renderMode?: \"reuse\" | \"reconcile\"\n) => {\n  let parentRef: { parent: Node & ParentNode; next: Node } = null;\n  arr.$val.on(\"beforemulti\", function() {\n    if (parentDom.parentNode) {\n      parentRef = {\n        parent: parentDom,\n        next: (parentDom as Element).nextElementSibling\n      };\n      parentDom = document.createDocumentFragment();\n    }\n  });\n  arr.$val.on(\"aftermulti\", function() {\n    if (parentRef) {\n      parentRef.parent.insertBefore(parentDom, parentRef.next);\n      parentDom = parentRef.parent;\n    }\n  });\n\n  arr.$val.on(\"itemadded\", function(e) {\n    insertToDom(parentDom, e.index, renderReturn(e.item, e.index));\n  });\n\n  arr.$val.on(\"itemset\", function(e) {\n    parentDom.replaceChild(\n      renderReturn(e.item, e.index) as any,\n      parentDom.children.item(e.index)\n    );\n  });\n\n  arr.$val.on(\"itemremoved\", function(e) {\n    parentDom.removeChild(parentDom.children.item(e.index));\n  });\n\n  let firstRenderOnFragment = undefined;\n  const arrayComputeRenderAll = function(nextVal) {\n    if (!renderMode) {\n      const parentFragment = document.createDocumentFragment();\n      parentDom.textContent = \"\";\n      for (var i = 0; i < arr.$val.length; i++) {\n        insertToDom(parentFragment, i, renderReturn(arr.$val[i], i));\n      }\n      parentDom.appendChild(parentFragment);\n    } else {\n      if (firstRenderOnFragment === undefined && nextVal && nextVal.length > 0)\n        firstRenderOnFragment = document.createDocumentFragment();\n      let renderFunction: (\n        parent,\n        renderedValues,\n        data,\n        createFn,\n        noOp,\n        beforeNode?,\n        afterNode?\n      ) => void = renderMode === \"reconcile\" ? reconcile : reuseNodes;\n      renderFunction(\n        firstRenderOnFragment || parentDom,\n        arr.$val.innerArray,\n        nextVal || [],\n        nextItem => {\n          return renderReturn(nextItem);\n        },\n        (nextItem, prevItem) => {\n          for (var key in nextItem) {\n            if (prevItem[key].hasOwnProperty(\"$val\")) {\n              nextItem[key].depends = prevItem[key].depends;\n              prevItem[key](nextItem[key]());\n            }\n          }\n        }\n      );\n      if (firstRenderOnFragment) {\n        parentDom.appendChild(firstRenderOnFragment);\n        firstRenderOnFragment = null;\n      }\n    }\n  };\n\n  beforeComputeBy(arr, arrayComputeRenderAll);\n};\n","// https://github.com/Freak613/stage0/blob/master/reuseNodes.js\n\nexport const reuseNodes = (\n  parent,\n  renderedValues,\n  data,\n  createFn,\n  noOp,\n  beforeNode?,\n  afterNode?\n) => {\n  if (data.length === 0) {\n    if (beforeNode !== undefined || afterNode !== undefined) {\n      let node =\n          beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n        tmp;\n\n      if (afterNode === undefined) afterNode = null;\n\n      while (node !== afterNode) {\n        tmp = node.nextSibling;\n        parent.removeChild(node);\n        node = tmp;\n      }\n    } else {\n      parent.textContent = \"\";\n    }\n    return;\n  }\n  if (renderedValues.length > data.length) {\n    let i = renderedValues.length,\n      tail =\n        afterNode !== undefined ? afterNode.previousSibling : parent.lastChild,\n      tmp;\n    while (i > data.length) {\n      tmp = tail.previousSibling;\n      parent.removeChild(tail);\n      tail = tmp;\n      i--;\n    }\n  }\n\n  let _head = beforeNode ? beforeNode.nextSibling : parent.firstChild;\n  if (_head === afterNode) _head = undefined;\n\n  let _mode = afterNode ? 1 : 0;\n  for (let i = 0, item, head = _head, mode = _mode; i < data.length; i++) {\n    item = data[i];\n    if (head) {\n      noOp(item, renderedValues[i]);\n    } else {\n      head = createFn(item);\n      mode ? parent.insertBefore(head, afterNode) : parent.appendChild(head);\n    }\n    head = head.nextSibling;\n    if (head === afterNode) head = null;\n  }\n};\n","import { FidanValue, array, computeBy, FidanArray } from \"./f\";\nimport { arrayMap } from \"./dom\";\n\nconst COMMENT_TEXT = 1;\nconst COMMENT_DOM = 2;\nconst COMMENT_FN = 4;\nconst COMMENT_HTM = 8;\nconst COMMENT_TEXT_OR_DOM = COMMENT_TEXT | COMMENT_DOM;\n\nconst htmlProps = {\n  id: true,\n  nodeValue: true,\n  textContent: true,\n  className: true,\n  innerHTML: true,\n  innerText: true,\n  tabIndex: true,\n  value: true\n};\n\nlet _templateMode = false; // TODO kaldırılacak yerine başka bir yöntem geliştirilecek\nlet template = document.createElement(\"template\");\n\nconst putCommentToTagStart = (\n  htm: string[],\n  index: number,\n  comment: string\n) => {\n  for (var i = index; i >= 0; i--) {\n    let item = htm[i];\n    let p = item.lastIndexOf(\"<\");\n    if (p !== -1) {\n      htm[i] = item.substr(0, p) + comment + item.substr(p);\n      // htm[i] =\n      //   item.substr(0, p) + comment + item.substr(p, item.lastIndexOf(\" \") - p);\n      // if (htm[index + 1].substr(0, 1) === '\"') {\n      //   htm[index + 1] = htm[index + 1].substr(1);\n      // }\n      break;\n    }\n  }\n};\n\nexport const html = (...args) => {\n  const htm: string[] = args[0].slice();\n  const params = args.slice(1);\n  let attributeName: string = null;\n  let i = 0;\n\n  for (var index = 0; index < htm.length; index++) {\n    let item = htm[index];\n    const param = params[index];\n    if (param === undefined) {\n      break;\n    }\n    const isDynamic = param.hasOwnProperty(\"$val\");\n    if (isDynamic) {\n      if (param[\"$indexes\"] === undefined) {\n        param[\"$indexes\"] = [];\n      }\n      param[\"$indexes\"].push(index);\n    }\n    if (item.endsWith('=\"')) {\n      i = item.lastIndexOf(\" \") + 1;\n      attributeName = item.substr(i, item.length - i - 2);\n      putCommentToTagStart(\n        htm,\n        index,\n        `<!-- cmt_${COMMENT_DOM}_${index}_${attributeName} -->`\n      );\n    } else {\n      let commentType =\n        typeof param === \"function\" && !isDynamic\n          ? COMMENT_FN\n          : typeof param === \"object\"\n          ? COMMENT_HTM\n          : COMMENT_TEXT;\n      htm[index] = item + `<!-- cmt_${commentType}_${index} -->`;\n    }\n  }\n  template = template.cloneNode(false) as HTMLTemplateElement;\n  template.innerHTML = htm.join(\"\");\n  const element = template.content;\n  element[\"$params\"] = params;\n  if (!_templateMode) {\n    updateNodesByCommentNodes(element, params);\n  }\n  return element;\n};\n\nconst walkForCommentNodes = (element, commentNodes) => {\n  var treeWalker = document.createTreeWalker(\n    element,\n    NodeFilter.SHOW_COMMENT,\n    {\n      acceptNode: function(node) {\n        var nodeValue = node.nodeValue.trim();\n        return nodeValue.startsWith(\"cmt_\")\n          ? NodeFilter.FILTER_ACCEPT\n          : NodeFilter.FILTER_REJECT;\n      }\n    },\n    false\n  );\n\n  while (treeWalker.nextNode()) {\n    commentNodes.push(treeWalker.currentNode);\n  }\n};\n\nconst updateNodesByCommentNodes = (element: Node, params: any[]) => {\n  var commentNodes = [];\n  walkForCommentNodes(element, commentNodes);\n\n  for (var i = 0; i < commentNodes.length; i++) {\n    const commentNode = commentNodes[i];\n    var commentValue = commentNode.nodeValue;\n    let element = null;\n    let attributeName: string = null;\n\n    let i1 = commentValue.indexOf(\"_\") + 1;\n    var i2 = commentValue.indexOf(\"_\", i1);\n    const commentType = parseInt(commentValue.substr(i1, i2 - i1));\n    i1 = commentValue.indexOf(\"_\", i2) + 1;\n    i2 = commentValue.indexOf(\"_\", i1);\n    if (i2 === -1) {\n      i2 = commentValue.indexOf(\" \", i1);\n    }\n    let paramIndex = parseInt(commentValue.substr(i1, i2 - i1));\n    let param = params[paramIndex];\n\n    if (commentType & COMMENT_TEXT_OR_DOM) {\n      if (commentType === COMMENT_TEXT) {\n        attributeName = \"textContent\";\n        element = document.createTextNode(param.$val);\n        commentNode.parentElement.insertBefore(\n          element,\n          commentNode.nextSibling\n        );\n        if (!param.hasOwnProperty(\"$val\")) {\n          if (Array.isArray(param)) {\n            for (var p = 0; p < param.length; p++) {\n              commentNode.parentElement.appendChild(param[p]);\n            }\n          }\n        }\n      } else if (commentType === COMMENT_DOM) {\n        attributeName = commentValue.substr(\n          i2 + 1,\n          commentValue.length - i2 - 2\n        );\n        element = commentNode.nextElementSibling;\n      }\n      if (attributeName.startsWith(\"on\")) {\n        (element as Element).addEventListener(attributeName.substr(2), param);\n      } else if (param.hasOwnProperty(\"$val\")) {\n        if (htmlProps[attributeName]) {\n          computeBy(param, val => {\n            element[attributeName] = val;\n          })[\"name$\"] = \"[\" + attributeName + \"]\";\n        } else {\n          computeBy(param, val => {\n            element.setAttribute(attributeName, val);\n          })[\"name$\"] = \"attr(\" + attributeName + \")\";\n        }\n      } else {\n        if (htmlProps[attributeName]) {\n          element[attributeName] = param;\n        } else {\n          element.setAttribute(attributeName, param);\n        }\n      }\n    } else if (commentType === COMMENT_FN) {\n      param(commentNode);\n    } else if (commentType === COMMENT_HTM) {\n      commentNode.parentElement.insertBefore(param, commentNode.nextSibling);\n    }\n  }\n};\n\nexport const htmlArrayMap = <T>(\n  arr: FidanArray<T>,\n  renderCallback: (data: T) => DocumentFragment,\n  options: {\n    useCloneNode: boolean;\n    renderMode?: \"reuse\" | \"reconcile\";\n  } = {\n    useCloneNode: false,\n    renderMode: undefined\n  }\n) => {\n  // if (Array.isArray(arr)) {\n  //   const oArray = array(arr);\n  //   [\n  //     \"copyWithin\",\n  //     \"fill\",\n  //     \"pop\",\n  //     \"push\",\n  //     \"reverse\",\n  //     \"shift\",\n  //     \"sort\",\n  //     \"splice\",\n  //     \"unshift\"\n  //   ].forEach(method => (arr[method] = oArray.$val[method]));\n  //   arr = oArray;\n  // }\n  if (options.useCloneNode) {\n    return (commentNode: Node) => {\n      const element = commentNode.parentElement;\n      let clonedNode = null;\n      let params = null;\n      let dataParamIndexes = [];\n      const arrayMapFn = data => {\n        let renderNode = null;\n        if (clonedNode === null) {\n          _templateMode = true;\n          renderNode = renderCallback(data);\n          _templateMode = false;\n          params = renderNode[\"$params\"];\n          for (var key in data) {\n            const indexes = data[key][\"$indexes\"];\n            if (indexes)\n              for (var i = 0; i < indexes.length; i++) {\n                dataParamIndexes.push(indexes[i], key);\n              }\n          }\n          clonedNode = renderNode.cloneNode(true);\n        } else {\n          renderNode = clonedNode.cloneNode(true);\n        }\n        for (var i = 0; i < dataParamIndexes.length; i += 2) {\n          params[dataParamIndexes[i]] = data[dataParamIndexes[i + 1]];\n        }\n        updateNodesByCommentNodes(renderNode, params);\n        return renderNode;\n      };\n      arrayMap(arr, element, arrayMapFn, options.renderMode);\n    };\n  } else {\n    return function(commentNode) {\n      var element = commentNode.parentElement;\n      arrayMap(arr as any, element, renderCallback);\n    };\n  }\n};\n","import { value } from \"./f\";\n\nexport const setDefaults = <T>(\n  obj: T,\n  defaults: { [key in keyof T]?: any }\n) => {\n  for (var key in defaults) {\n    if (obj[key] === undefined) obj[key] = defaults[key];\n  }\n};\n\nexport const mapProperty = (obj: Object, propertyKey: string, value$: any) => {\n  const descr = Object.getOwnPropertyDescriptor(obj, propertyKey);\n  if (descr.configurable)\n    Object.defineProperty(obj, propertyKey, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        return value$.$val;\n      },\n      set: value$\n    });\n  else {\n    descr.set[\"depends\"].push(\n      value(() => {\n        value$(obj[propertyKey]);\n      })\n    );\n  }\n};\n\nexport const jsRoot = () => {\n  let root;\n\n  if (typeof self !== \"undefined\") {\n    root = self;\n  } else if (typeof window !== \"undefined\") {\n    root = window;\n  } else if (typeof global !== \"undefined\") {\n    root = global;\n  } else if (typeof module !== \"undefined\") {\n    root = module;\n  } else {\n    root = Function(\"return this\")();\n  }\n  return root;\n};\n","const activeContextKeys = [];\nconst appContext: { [key: string]: any[] } = {};\n\nexport const startContext = (key: string, value: any) => {\n  if (!appContext[key]) appContext[key] = [];\n  appContext[key].push(value);\n  activeContextKeys.push(key);\n};\n\nexport const getContextValue = (key: string, componentProps: any) => {\n  if (componentProps && componentProps[\"$context\"][key])\n    return componentProps[\"$context\"][key];\n  if (appContext[key]) return appContext[key][appContext[key].length - 1];\n};\n\nexport const injectContexts = (componentProps: any) => {\n  if (!componentProps[\"$context\"])\n    Object.defineProperty(componentProps, \"$context\", {\n      configurable: false,\n      enumerable: false,\n      value: {}\n    });\n  let key = null;\n  for (var i = 0; i < activeContextKeys.length; i++) {\n    key = activeContextKeys[i];\n    componentProps[\"$context\"][key] =\n      appContext[key][appContext[key].length - 1];\n  }\n};\n\nexport const endContext = (key: string) => {\n  appContext[key].pop();\n  activeContextKeys.pop();\n};\n\nexport const activateContext = context => {\n  for (var key in context) startContext(key, context[key]);\n};\n\nexport const deactivateContext = context => {\n  for (var key in context) endContext(key);\n};\n\nexport const Context = (props: { key: string; value: any }) => null;\n","import { injectContexts, activateContext, deactivateContext } from \"./context\";\r\n\r\nvar jsxEventProperty = /^on[A-Z]/;\r\nconst svgNS = \"http://www.w3.org/2000/svg\";\r\nexport const Fragment = Symbol(\"fjsx.Fragment\");\r\n\r\nexport const conditionalElement = (\r\n  parentElement,\r\n  oldElement,\r\n  newElementFn: () => any\r\n) => {\r\n  parentElement[\"$props\"] &&\r\n    activateContext(parentElement[\"$props\"][\"$context\"]);\r\n  let newElement = newElementFn();\r\n  parentElement[\"$props\"] &&\r\n    deactivateContext(parentElement[\"$props\"][\"$context\"]);\r\n  if (newElement instanceof Node === false)\r\n    newElement = document.createTextNode(newElement || \"\");\r\n  if (oldElement) parentElement.replaceChild(newElement, oldElement);\r\n  else parentElement.appendChild(newElement);\r\n  return newElement;\r\n};\r\n\r\nexport const setElementAttributes = (\r\n  element: Element,\r\n  attributes,\r\n  forceSetAttr?: boolean\r\n) => {\r\n  let attribute = null;\r\n  for (var attributeName in attributes) {\r\n    attribute = attributes[attributeName];\r\n    if (attribute != undefined) {\r\n      if (attribute instanceof Function) {\r\n        if (jsxEventProperty.test(attributeName)) {\r\n          attributeName = attributeName.toLowerCase();\r\n          element[attributeName] = attribute;\r\n        } else attribute(element);\r\n      } else if (attribute instanceof Object) {\r\n        if (Array.isArray(attribute)) {\r\n          addChildElements(element, attribute);\r\n        } else {\r\n          for (var key in attribute) {\r\n            if (typeof attribute[key] === \"function\") attribute[key](element);\r\n            else element[attributeName][key] = attribute[key]; // style like\r\n          }\r\n        }\r\n      } else {\r\n        if (forceSetAttr || attributeName.indexOf(\"-\") !== -1)\r\n          element.setAttribute(attributeName, attribute);\r\n        else element[attributeName] = attribute;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const createElement = (\r\n  tagName: string | Function | Symbol,\r\n  attributes: { [key: string]: any },\r\n  ...childs: any[]\r\n) => {\r\n  let element = null;\r\n  if (tagName instanceof Function) {\r\n    if (attributes === null) attributes = {};\r\n    if (childs && childs.length) attributes[\"children\"] = childs;\r\n    injectContexts(attributes);\r\n    element = (tagName as any)(attributes);\r\n    if (element) element[\"$props\"] = attributes;\r\n  } else {\r\n    if (tagName === Fragment) {\r\n      element = document.createDocumentFragment();\r\n    } else {\r\n      element = document.createElement(tagName as any);\r\n      attributes &&\r\n        setElementAttributes(\r\n          element,\r\n          attributes,\r\n          (tagName as string).indexOf(\"-\") !== -1\r\n        );\r\n    }\r\n    element[\"$props\"] = attributes;\r\n    childs && childs.length && addChildElements(element, childs);\r\n  }\r\n  return element;\r\n};\r\n\r\nexport const createSvgElement = (\r\n  tagName: string,\r\n  attributes: { [key: string]: any },\r\n  ...childs: any[]\r\n) => {\r\n  let element = document.createElementNS(svgNS, tagName);\r\n  if (attributes) {\r\n    if (attributes.className) {\r\n      // TODO compile time\r\n      attributes.class = attributes.className;\r\n      delete attributes.className;\r\n    }\r\n    setElementAttributes(element, attributes, true);\r\n  }\r\n  element[\"$props\"] = attributes;\r\n  childs && childs.length && addChildElements(element, childs);\r\n  return element;\r\n};\r\n\r\nexport const addChildElements = (element, childs) => {\r\n  let props = null;\r\n  for (var i = 0; i < childs.length; i++) {\r\n    if (Array.isArray(childs[i])) addChildElements(element, childs[i]);\r\n    else if (childs[i] instanceof Function) childs[i](element);\r\n    else {\r\n      if (childs[i] != null) {\r\n        props = childs[i][\"$props\"];\r\n        element.appendChild(\r\n          childs[i] instanceof Node\r\n            ? childs[i]\r\n            : document.createTextNode(childs[i])\r\n        );\r\n        props && props.didMount && props.didMount(element, childs[i]);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const createTextNode = parent => {\r\n  return parent.appendChild(document.createTextNode(\"\"));\r\n};\r\n\r\nexport const cloneElement = (element: Element, attributes: any) => {\r\n  element = element.cloneNode(true) as Element;\r\n  attributes && setElementAttributes(element, attributes, false);\r\n  return element;\r\n};\r\n","import { FidanValue, value } from \"./f\";\nimport { jsRoot } from \"./util\";\n\nfunction symbolObservablePonyfill(root) {\n  let result;\n  const Symbol = root.Symbol;\n\n  if (typeof Symbol === \"function\") {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      result = Symbol(\"observable\");\n      Symbol.observable = result;\n    }\n  } else {\n    result = \"@@observable\";\n  }\n\n  return result;\n}\n\nconst $$symbolObservable = symbolObservablePonyfill(jsRoot());\n\nclass Observer {\n  isUnsubscribed = false;\n  handlers: Partial<Observer> = null;\n  _unsubscribe = null;\n  constructor(handlers: Partial<Observer>) {\n    this.handlers = handlers;\n    this.isUnsubscribed = false;\n  }\n\n  next(value) {\n    if (this.handlers.next && !this.isUnsubscribed) {\n      this.handlers.next(value);\n    }\n  }\n\n  error(error) {\n    if (!this.isUnsubscribed) {\n      if (this.handlers.error) {\n        this.handlers.error(error);\n      }\n\n      this.unsubscribe();\n    }\n  }\n\n  complete() {\n    if (!this.isUnsubscribed) {\n      if (this.handlers.complete) {\n        this.handlers.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }\n\n  unsubscribe() {\n    this.isUnsubscribed = true;\n\n    if (this._unsubscribe) {\n      this._unsubscribe();\n    }\n  }\n}\n\nclass Observable {\n  _subscribe: (observer: Observer) => () => void = null;\n  constructor(subscribe) {\n    this._subscribe = subscribe;\n  }\n\n  subscribe(obs: Partial<Observer>) {\n    const observer = new Observer(obs);\n\n    observer._unsubscribe = this._subscribe(observer);\n\n    return {\n      unsubscribe() {\n        observer.unsubscribe();\n      }\n    };\n  }\n\n  [$$symbolObservable]() {\n    return this;\n  }\n}\n\nexport const toObservable = <T>(data: FidanValue<any>): T => {\n  return new Observable(observer => {\n    var compute = value(() => {\n      observer.next(data.$val);\n    });\n    data[\"depends\"].push(compute);\n  }) as any;\n};\n","/// <reference path=\"../types/JSX.d.ts\" />\nimport * as fidanObj from \"./libs\";\nexport const fidan = fidanObj;\nfidan[\"VERSION\"] = \"0.0.4\";\n"],"names":["EventedArray","items","_self","this","_array","defineIndexProperty","index","Object","defineProperty","configurable","enumerable","get","set","v","raiseEvent","type","item","event","_handlers","forEach","h","call","itemadded","itemremoved","itemset","beforemulti","aftermulti","on","eventName","handler","push","off","ln","length","splice","arguments","i","pop","unshift","shift","howMany","removed","value","n","Number","RangeError","apply","Array","getOwnPropertyNames","prototype","name","writable","setEventsFrom","val","toJSON","isArray","const","freezed","innerFn","undefined","slice","hasOwnProperty","arr","innerArray","depends","beforeCompute","compute","toString","computeBy","initial","fn","cmp","$val","args","beforeComputeBy","findGreatestIndexLEQ","seq","lo","hi","mid","Math","floor","insertToDom","parentElement","itemElement","typeOf","document","createTextNode","insertBefore","children","arrayMap","parentDom","renderReturn","renderMode","parentRef","parentNode","parent","next","nextElementSibling","createDocumentFragment","e","replaceChild","removeChild","firstRenderOnFragment","nextVal","renderedValues","data","createFn","noOp","beforeNode","afterNode","a","b","prevStart","newStart","loop","prevEnd","newEnd","prevStartNode","nextSibling","firstChild","newStartNode","prevEndNode","previousSibling","lastChild","fixes","_node","node","mode","appendChild","P","I","Map","reusingNodes","toRemove","has","longestSeq","ns","is","l","pre","len","j","longestPositiveIncreasingSubsequence","nodes","tmpC","let","tmpD","lisIdx","tmp","textContent","tail","_head","head","nextItem","prevItem","key","parentFragment","htmlProps","id","nodeValue","className","innerHTML","innerText","tabIndex","_templateMode","template","createElement","putCommentToTagStart","htm","comment","p","lastIndexOf","substr","updateNodesByCommentNodes","element","params","commentNodes","treeWalker","createTreeWalker","NodeFilter","SHOW_COMMENT","acceptNode","trim","startsWith","FILTER_ACCEPT","FILTER_REJECT","nextNode","currentNode","walkForCommentNodes","commentNode","commentValue","attributeName","i1","indexOf","i2","commentType","parseInt","paramIndex","param","COMMENT_TEXT","addEventListener","setAttribute","jsRoot","self","window","global","module","Function","activeContextKeys","appContext","startContext","injectContexts","componentProps","endContext","activateContext","context","deactivateContext","jsxEventProperty","Fragment","Symbol","setElementAttributes","attributes","forceSetAttr","attribute","test","toLowerCase","addChildElements","childs","props","Node","didMount","$$symbolObservable","root","result","observable","symbolObservablePonyfill","Observer","constructor","handlers","isUnsubscribed","error","unsubscribe","complete","_unsubscribe","Observable","subscribe","_subscribe","obs","observer","callback","isDynamic","endsWith","cloneNode","join","content","renderCallback","options","useCloneNode","clonedNode","dataParamIndexes","renderNode","indexes","obj","defaults","propertyKey","value$","descr","getOwnPropertyDescriptor","oldElement","newElementFn","newElement","tagName","createElementNS","class","fidan"],"mappings":"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"}