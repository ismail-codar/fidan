{"version":3,"file":"index.js","sources":["../src/evented-array.ts","../src/f.ts","../src/observable.ts","../src/dom.ts","../src/reuse-nodes.ts","../src/util.ts","../src/html.ts"],"sourcesContent":["export type ArrayMutableMethods =\n  | \"copyWithin\" // TODO ArrayMutableMethods copyWithin\n  | \"fill\" // TODO ArrayMutableMethods fill\n  | \"pop\"\n  | \"push\"\n  | \"reverse\" // TODO ArrayMutableMethods reverse\n  | \"shift\"\n  | \"sort\" // TODO ArrayMutableMethods sort\n  | \"splice\"\n  | \"unshift\";\n\n// TODO concat vs..\n\nexport function EventedArray(items) {\n  var _self = this,\n    _array = [];\n\n  _self._handlers = {\n    itemadded: [],\n    itemremoved: [],\n    itemset: [],\n    beforemulti: [],\n    aftermulti: []\n  };\n\n  function defineIndexProperty(index) {\n    if (!(index in _self)) {\n      Object.defineProperty(_self, index, {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n          return _array[index];\n        },\n        set: function(v) {\n          _array[index] = v;\n          raiseEvent({\n            type: \"itemset\",\n            index: index,\n            item: v\n          });\n        }\n      });\n    }\n  }\n\n  function raiseEvent(event) {\n    _self._handlers[event.type].forEach(function(h) {\n      h.call(_self, event);\n    });\n  }\n\n  _self.on = function(eventName, handler) {\n    _self._handlers[eventName].push(handler);\n  };\n\n  _self.off = function(eventName, handler) {\n    var h = _self._handlers[eventName];\n    var ln = h.length;\n    while (--ln >= 0) {\n      if (h[ln] === handler) {\n        h.splice(ln, 1);\n      }\n    }\n  };\n\n  _self.push = function() {\n    var index;\n    arguments.length > 1 &&\n      raiseEvent({\n        type: \"beforemulti\"\n      });\n    for (var i = 0, ln = arguments.length; i < ln; i++) {\n      index = _array.length;\n      _array.push(arguments[i]);\n      defineIndexProperty(index);\n      raiseEvent({\n        type: \"itemadded\",\n        index: index,\n        item: arguments[i]\n      });\n    }\n    arguments.length > 1 &&\n      raiseEvent({\n        type: \"aftermulti\"\n      });\n    return _array.length;\n  };\n\n  _self.pop = function() {\n    if (_array.length > -1) {\n      var index = _array.length - 1,\n        item = _array.pop();\n      delete _self[index];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: index,\n        item: item\n      });\n      return item;\n    }\n  };\n\n  _self.unshift = function() {\n    for (var i = 0, ln = arguments.length; i < ln; i++) {\n      _array.splice(i, 0, arguments[i]);\n      defineIndexProperty(_array.length - 1);\n      raiseEvent({\n        type: \"itemadded\",\n        index: i,\n        item: arguments[i]\n      });\n    }\n    for (; i < _array.length; i++) {\n      raiseEvent({\n        type: \"itemset\",\n        index: i,\n        item: _array[i]\n      });\n    }\n    return _array.length;\n  };\n\n  _self.shift = function() {\n    if (_array.length > -1) {\n      var item = _array.shift();\n      delete _self[_array.length];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: 0,\n        item: item\n      });\n      return item;\n    }\n  };\n\n  _self.splice = function(index, howMany /*, element1, element2, ... */) {\n    var removed = [],\n      item,\n      pos;\n\n    index = index == null ? 0 : index < 0 ? _array.length + index : index;\n\n    howMany =\n      howMany == null ? _array.length - index : howMany > 0 ? howMany : 0;\n\n    while (howMany--) {\n      item = _array.splice(index, 1)[0];\n      removed.push(item);\n      delete _self[_array.length];\n      raiseEvent({\n        type: \"itemremoved\",\n        index: index + removed.length - 1,\n        item: item\n      });\n    }\n\n    for (var i = 2, ln = arguments.length; i < ln; i++) {\n      _array.splice(index, 0, arguments[i]);\n      defineIndexProperty(_array.length - 1);\n      raiseEvent({\n        type: \"itemadded\",\n        index: index,\n        item: arguments[i]\n      });\n      index++;\n    }\n\n    return removed;\n  };\n\n  Object.defineProperty(_self, \"length\", {\n    configurable: false,\n    enumerable: false,\n    get: function() {\n      return _array.length;\n    },\n    set: function(value) {\n      var n = Number(value);\n      var length = _array.length;\n      if (n % 1 === 0 && n >= 0) {\n        if (n < length) {\n          _self.splice(n);\n        } else if (n > length) {\n          _self.push.apply(_self, new Array(n - length));\n        }\n      } else {\n        throw new RangeError(\"Invalid array length\");\n      }\n      _array.length = n;\n      return value;\n    }\n  });\n\n  Object.defineProperty(_self, \"innerArray\", {\n    configurable: false,\n    enumerable: false,\n    get: function() {\n      return _array;\n    },\n    set: function(v) {\n      _array = v;\n      for (var i = 0; i < v.length; i++) {\n        defineIndexProperty(i);\n      }\n    }\n  });\n\n  Object.getOwnPropertyNames(Array.prototype).forEach(function(name) {\n    if (!(name in _self)) {\n      Object.defineProperty(_self, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Array.prototype[name]\n      });\n    }\n  });\n\n  _self.setEventsFrom = function(val) {\n    _self.on = val.on;\n    _self.off = val.off;\n    _self._handlers = val._handlers;\n  };\n\n  _self.toJSON = () => {\n    return _array;\n  };\n\n  if (Array.isArray(items)) {\n    _self.push.apply(_self, items);\n  }\n}\n","import { EventedArray } from \"./evented-array\";\r\nimport { FidanArray, FidanValue } from \".\";\r\n\r\nexport const array = <T>(items: T[]): FidanArray<T> => {\r\n  const arr = value(new EventedArray(items)) as any;\r\n  arr.toJSON = () => arr.$val.innerArray;\r\n\r\n  return arr;\r\n};\r\n\r\nexport const value = <T>(val?: T): FidanValue<T> => {\r\n  const innerFn: any = (val?) => {\r\n    if (val === undefined) {\r\n      return innerFn[\"$val\"];\r\n    } else {\r\n      if (Array.isArray(val)) {\r\n        val = new EventedArray(val.slice(0));\r\n        val.setEventsFrom(innerFn[\"$val\"]);\r\n      } else if (val && val.hasOwnProperty(\"innerArray\")) {\r\n        var arr = new EventedArray(val.innerArray.slice(0));\r\n        arr.setEventsFrom(val);\r\n        val = arr;\r\n      }\r\n      let depends = innerFn[\"bc_depends\"];\r\n      if (depends.length)\r\n        for (var i = 0; i < depends.length; i++) {\r\n          depends[i].beforeCompute(val, innerFn[\"$val\"], innerFn);\r\n        }\r\n      innerFn[\"$val\"] = val;\r\n      depends = innerFn[\"c_depends\"];\r\n      if (depends.length)\r\n        for (var i = 0; i < depends.length; i++) {\r\n          depends[i](depends[i].compute(val));\r\n        }\r\n    }\r\n  };\r\n\r\n  innerFn[\"$val\"] = val;\r\n  innerFn[\"bc_depends\"] = [];\r\n  innerFn[\"c_depends\"] = [];\r\n  innerFn.toString = innerFn.toJSON = () => innerFn[\"$val\"].toString();\r\n  return innerFn;\r\n};\r\n\r\nexport const compute = <T>(\r\n  fn: (val: T, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  const cmp = value(undefined);\r\n  cmp[\"compute\"] = fn;\r\n  for (var i = 0; i < args.length; i++) args[i][\"c_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\nexport const beforeCompute = <T>(\r\n  fn: (nextValue?: T, prevValue?: T, changedItem?) => void,\r\n  ...args: any[]\r\n) => {\r\n  const cmp = value(undefined);\r\n  cmp[\"beforeCompute\"] = fn;\r\n  for (var i = 0; i < args.length; i++) args[i][\"bc_depends\"].push(cmp);\r\n  return cmp;\r\n};\r\n\r\n// TODO typedCompute, typedValue ...\r\n// export const computeReturn = <T>(fn: () => T, ...args: any[]): T =>\r\n//   initCompute(fn, ...args) as any;\r\n\r\n// export const setCompute = (prev: any, fn: () => void, ...args: any[]) => {\r\n//   destroy(prev);\r\n//   return initCompute(prev, fn, ...args);\r\n// };\r\n\r\nexport const destroy = (item: any) => {\r\n  delete item[\"compute\"];\r\n  delete item[\"c_depends\"];\r\n};\r\n","import { jsRoot } from \"./util\";\nimport { FidanValue } from \".\";\nimport { value } from \"./f\";\n\nfunction symbolObservablePonyfill(root) {\n  let result;\n  const Symbol = root.Symbol;\n\n  if (typeof Symbol === \"function\") {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      result = Symbol(\"observable\");\n      Symbol.observable = result;\n    }\n  } else {\n    result = \"@@observable\";\n  }\n\n  return result;\n}\n\nconst $$symbolObservable = symbolObservablePonyfill(jsRoot());\n\nclass Observer {\n  isUnsubscribed = false;\n  handlers: Partial<Observer> = null;\n  _unsubscribe = null;\n  constructor(handlers: Partial<Observer>) {\n    this.handlers = handlers;\n    this.isUnsubscribed = false;\n  }\n\n  next(value) {\n    if (this.handlers.next && !this.isUnsubscribed) {\n      this.handlers.next(value);\n    }\n  }\n\n  error(error) {\n    if (!this.isUnsubscribed) {\n      if (this.handlers.error) {\n        this.handlers.error(error);\n      }\n\n      this.unsubscribe();\n    }\n  }\n\n  complete() {\n    if (!this.isUnsubscribed) {\n      if (this.handlers.complete) {\n        this.handlers.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }\n\n  unsubscribe() {\n    this.isUnsubscribed = true;\n\n    if (this._unsubscribe) {\n      this._unsubscribe();\n    }\n  }\n}\n\nclass Observable {\n  _subscribe: (observer: Observer) => () => void = null;\n  constructor(subscribe) {\n    this._subscribe = subscribe;\n  }\n\n  subscribe(obs: Partial<Observer>) {\n    const observer = new Observer(obs);\n\n    observer._unsubscribe = this._subscribe(observer);\n\n    return {\n      unsubscribe() {\n        observer.unsubscribe();\n      }\n    };\n  }\n\n  [$$symbolObservable]() {\n    return this;\n  }\n}\n\nexport const toObservable = <T>(data: FidanValue<any>): T => {\n  return new Observable(observer => {\n    var compute = value(() => {\n      observer.next(data.$val);\n    });\n    data[\"depends\"].push(compute);\n  }) as any;\n};\n","import { beforeCompute } from \"./f\";\nimport { reuseNodes } from \"./reuse-nodes\";\nimport { FidanArray } from \".\";\n\nexport const insertToDom = (parentElement, index, itemElement) => {\n  const typeOf = typeof itemElement;\n  if (typeOf === \"function\") {\n    itemElement(parentElement);\n  } else {\n    if (typeOf !== \"object\") {\n      itemElement = document.createTextNode(itemElement);\n    }\n    parentElement.insertBefore(itemElement, parentElement.children[index]);\n  }\n};\n\nexport const arrayMap = <T>(\n  arr: FidanArray<T>,\n  parentDom: Node & ParentNode,\n  renderReturn: (item: any, idx?: number, isInsert?: boolean) => Node,\n  reuseMode?: boolean\n) => {\n  let parentRef: { parent: Node & ParentNode; next: Node } = null;\n  arr.$val.on(\"beforemulti\", function() {\n    if (parentDom.parentNode) {\n      parentRef = {\n        parent: parentDom,\n        next: (parentDom as Element).nextElementSibling\n      };\n      parentDom = document.createDocumentFragment();\n    }\n  });\n  arr.$val.on(\"aftermulti\", function() {\n    if (parentRef) {\n      parentRef.parent.insertBefore(parentDom, parentRef.next);\n      parentDom = parentRef.parent;\n    }\n  });\n\n  arr.$val.on(\"itemadded\", function(e) {\n    insertToDom(parentDom, e.index, renderReturn(e.item, e.index));\n  });\n\n  arr.$val.on(\"itemset\", function(e) {\n    parentDom.replaceChild(\n      renderReturn(e.item, e.index) as any,\n      parentDom.children.item(e.index)\n    );\n  });\n\n  arr.$val.on(\"itemremoved\", function(e) {\n    parentDom.removeChild(parentDom.children.item(e.index));\n  });\n\n  let firstRenderOnFragment = undefined;\n  const arrayComputeRenderAll = function(nextVal) {\n    if (!reuseMode) {\n      const parentFragment = document.createDocumentFragment();\n      parentDom.textContent = \"\";\n      for (var i = 0; i < nextVal.length; i++) {\n        parentFragment.appendChild(renderReturn(nextVal[i]));\n      }\n      parentDom.appendChild(parentFragment);\n    } else {\n      if (firstRenderOnFragment === undefined && nextVal && nextVal.length > 0)\n        firstRenderOnFragment = document.createDocumentFragment();\n      reuseNodes(\n        firstRenderOnFragment || parentDom,\n        arr.$val.innerArray,\n        nextVal || [],\n        nextItem => {\n          return renderReturn(nextItem);\n        },\n        (nextItem, prevItem) => {\n          for (var key in nextItem) {\n            if (prevItem[key].hasOwnProperty(\"$val\")) {\n              nextItem[key].c_depends = prevItem[key].c_depends;\n              nextItem[key].bc_depends = prevItem[key].bc_depends;\n              prevItem[key](nextItem[key]());\n            }\n          }\n        }\n      );\n      if (firstRenderOnFragment) {\n        parentDom.appendChild(firstRenderOnFragment);\n        firstRenderOnFragment = null;\n      }\n    }\n  };\n\n  beforeCompute(arrayComputeRenderAll, arr);\n};\n","// https://github.com/Freak613/stage0/blob/master/reuseNodes.js\n\nexport const reuseNodes = (\n  parent,\n  renderedValues,\n  data,\n  createFn,\n  noOp,\n  beforeNode?,\n  afterNode?\n) => {\n  if (data.length === 0) {\n    if (beforeNode !== undefined || afterNode !== undefined) {\n      let node =\n          beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n        tmp;\n\n      if (afterNode === undefined) afterNode = null;\n\n      while (node !== afterNode) {\n        tmp = node.nextSibling;\n        parent.removeChild(node);\n        node = tmp;\n      }\n    } else {\n      parent.textContent = \"\";\n    }\n    return;\n  }\n  if (renderedValues.length > data.length) {\n    let i = renderedValues.length,\n      tail =\n        afterNode !== undefined ? afterNode.previousSibling : parent.lastChild,\n      tmp;\n    while (i > data.length) {\n      tmp = tail.previousSibling;\n      parent.removeChild(tail);\n      tail = tmp;\n      i--;\n    }\n  }\n\n  let _head = beforeNode ? beforeNode.nextSibling : parent.firstChild;\n  if (_head === afterNode) _head = undefined;\n\n  let _mode = afterNode ? 1 : 0;\n  for (let i = 0, item, head = _head, mode = _mode; i < data.length; i++) {\n    item = data[i];\n    if (head) {\n      noOp(item, renderedValues[i]);\n    } else {\n      head = createFn(item);\n      mode ? parent.insertBefore(head, afterNode) : parent.appendChild(head);\n    }\n    head = head.nextSibling;\n    if (head === afterNode) head = null;\n  }\n};\n","import { value } from \"./f\";\n\nexport const setDefaults = <T>(\n  obj: T,\n  defaults: { [key in keyof T]?: any }\n) => {\n  for (var key in defaults) {\n    if (obj[key] === undefined) obj[key] = defaults[key];\n  }\n};\n\nexport const mapProperty = (obj: Object, propertyKey: string, value$: any) => {\n  const descr = Object.getOwnPropertyDescriptor(obj, propertyKey);\n  if (descr.configurable)\n    Object.defineProperty(obj, propertyKey, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        return value$.$val;\n      },\n      set: value$\n    });\n  else {\n    descr.set[\"depends\"].push(\n      value(() => {\n        value$(obj[propertyKey]);\n      })\n    );\n  }\n};\n\nexport const jsRoot = () => {\n  let root;\n\n  if (typeof self !== \"undefined\") {\n    root = self;\n  } else if (typeof window !== \"undefined\") {\n    root = window;\n  } else if (typeof global !== \"undefined\") {\n    root = global;\n  } else if (typeof module !== \"undefined\") {\n    root = module;\n  } else {\n    root = Function(\"return this\")();\n  }\n  return root;\n};\n","import { compute } from \"./f\";\nimport { arrayMap } from \"./dom\";\nimport { FidanArray } from \".\";\n\nconst COMMENT_TEXT = 1;\nconst COMMENT_DOM = 2;\nconst COMMENT_FN = 4;\nconst COMMENT_HTM = 8;\nconst COMMENT_TEXT_OR_DOM = COMMENT_TEXT | COMMENT_DOM;\n\nconst htmlProps = {\n  id: true,\n  nodeValue: true,\n  textContent: true,\n  className: true,\n  innerHTML: true,\n  innerText: true,\n  tabIndex: true,\n  value: true\n};\n\nlet _templateMode = false; // TODO kaldırılacak yerine başka bir yöntem geliştirilecek\nlet template = document.createElement(\"template\");\n\nconst putCommentToTagStart = (\n  htm: string[],\n  index: number,\n  comment: string\n) => {\n  for (var i = index; i >= 0; i--) {\n    let item = htm[i];\n    let p = item.lastIndexOf(\"<\");\n    if (p !== -1) {\n      htm[i] = item.substr(0, p) + comment + item.substr(p);\n      // htm[i] =\n      //   item.substr(0, p) + comment + item.substr(p, item.lastIndexOf(\" \") - p);\n      // if (htm[index + 1].substr(0, 1) === '\"') {\n      //   htm[index + 1] = htm[index + 1].substr(1);\n      // }\n      break;\n    }\n  }\n};\n\nexport const html = (...args) => {\n  const htm: string[] = args[0].slice();\n  const params = args.slice(1);\n  let attributeName: string = null;\n  let i = 0;\n\n  for (var index = 0; index < htm.length; index++) {\n    let item = htm[index];\n    const param = params[index];\n    if (param === undefined) {\n      break;\n    }\n    const isDynamic = param.hasOwnProperty(\"$val\");\n    if (isDynamic) {\n      if (param[\"$indexes\"] === undefined) {\n        param[\"$indexes\"] = [];\n      }\n      param[\"$indexes\"].push(index);\n    }\n    if (item.endsWith('=\"')) {\n      i = item.lastIndexOf(\" \") + 1;\n      attributeName = item.substr(i, item.length - i - 2);\n      putCommentToTagStart(\n        htm,\n        index,\n        `<!-- cmt_${COMMENT_DOM}_${index}_${attributeName} -->`\n      );\n    } else {\n      let commentType =\n        typeof param === \"function\" && !isDynamic\n          ? COMMENT_FN\n          : typeof param === \"object\"\n          ? COMMENT_HTM\n          : COMMENT_TEXT;\n      htm[index] = item + `<!-- cmt_${commentType}_${index} -->`;\n    }\n  }\n  template = template.cloneNode(false) as HTMLTemplateElement;\n  template.innerHTML = htm.join(\"\");\n  const element = template.content;\n  element[\"$params\"] = params;\n  if (!_templateMode) {\n    updateNodesByCommentNodes(element, params);\n  }\n  return element;\n};\n\nconst walkForCommentNodes = (element, commentNodes) => {\n  var treeWalker = document.createTreeWalker(\n    element,\n    NodeFilter.SHOW_COMMENT,\n    {\n      acceptNode: function(node) {\n        var nodeValue = node.nodeValue.trim();\n        return nodeValue.startsWith(\"cmt_\")\n          ? NodeFilter.FILTER_ACCEPT\n          : NodeFilter.FILTER_REJECT;\n      }\n    },\n    false\n  );\n\n  while (treeWalker.nextNode()) {\n    commentNodes.push(treeWalker.currentNode);\n  }\n};\n\nconst updateNodesByCommentNodes = (element: Node, params: any[]) => {\n  var commentNodes = [];\n  walkForCommentNodes(element, commentNodes);\n\n  for (var i = 0; i < commentNodes.length; i++) {\n    const commentNode = commentNodes[i];\n    var commentValue = commentNode.nodeValue;\n    let element = null;\n    let attributeName: string = null;\n\n    let i1 = commentValue.indexOf(\"_\") + 1;\n    var i2 = commentValue.indexOf(\"_\", i1);\n    const commentType = parseInt(commentValue.substr(i1, i2 - i1));\n    i1 = commentValue.indexOf(\"_\", i2) + 1;\n    i2 = commentValue.indexOf(\"_\", i1);\n    if (i2 === -1) {\n      i2 = commentValue.indexOf(\" \", i1);\n    }\n    let paramIndex = parseInt(commentValue.substr(i1, i2 - i1));\n    let param = params[paramIndex];\n\n    if (commentType & COMMENT_TEXT_OR_DOM) {\n      if (commentType === COMMENT_TEXT) {\n        attributeName = \"textContent\";\n        element = document.createTextNode(param.$val);\n        commentNode.parentElement.insertBefore(\n          element,\n          commentNode.nextSibling\n        );\n        if (!param.hasOwnProperty(\"$val\")) {\n          if (Array.isArray(param)) {\n            for (var p = 0; p < param.length; p++) {\n              commentNode.parentElement.appendChild(param[p]);\n            }\n          }\n        }\n      } else if (commentType === COMMENT_DOM) {\n        attributeName = commentValue.substr(\n          i2 + 1,\n          commentValue.length - i2 - 2\n        );\n        element = commentNode.nextElementSibling;\n      }\n      if (attributeName.startsWith(\"on\")) {\n        (element as Element).addEventListener(attributeName.substr(2), param);\n      } else if (param.hasOwnProperty(\"$val\")) {\n        if (htmlProps[attributeName]) {\n          compute(val => {\n            element[attributeName] = val;\n          }, param)[\"name$\"] = \"[\" + attributeName + \"]\";\n          element[attributeName] = param();\n        } else {\n          compute(val => {\n            element.setAttribute(attributeName, val);\n          }, param)[\"name$\"] = \"attr(\" + attributeName + \")\";\n          element.setAttribute(attributeName, param());\n        }\n      } else {\n        if (typeof param === \"function\") {\n          const returned = param(element);\n          if (returned !== undefined) {\n            param = returned;\n          }\n        }\n        if (htmlProps[attributeName]) {\n          element[attributeName] = param;\n        } else {\n          element.setAttribute(attributeName, param);\n        }\n      }\n    } else if (commentType === COMMENT_FN) {\n      param(commentNode);\n    } else if (commentType === COMMENT_HTM) {\n      commentNode.parentElement.insertBefore(param, commentNode.nextSibling);\n    }\n  }\n};\n\nexport const htmlArrayMap = <T>(\n  arr: FidanArray<T>,\n  renderCallback: (data: T) => DocumentFragment,\n  options?: {\n    useCloneNode: boolean;\n    reuseMode?: boolean;\n  }\n) => {\n  options = Object.assign({ useCloneNode: false, reuseMode: false }, options);\n  if (options.useCloneNode) {\n    return (commentNode: Node) => {\n      const element = commentNode.parentElement;\n      let clonedNode = null;\n      let params = null;\n      let dataParamIndexes = [];\n      const arrayMapFn = data => {\n        let renderNode = null;\n        if (clonedNode === null) {\n          _templateMode = true;\n          renderNode = renderCallback(data);\n          _templateMode = false;\n          params = renderNode[\"$params\"];\n          for (var key in data) {\n            const indexes = data[key][\"$indexes\"];\n            if (indexes)\n              for (var i = 0; i < indexes.length; i++) {\n                dataParamIndexes.push(indexes[i], key);\n              }\n          }\n          clonedNode = renderNode.cloneNode(true);\n        } else {\n          renderNode = clonedNode.cloneNode(true);\n        }\n        for (var i = 0; i < dataParamIndexes.length; i += 2) {\n          params[dataParamIndexes[i]] = data[dataParamIndexes[i + 1]];\n        }\n        updateNodesByCommentNodes(renderNode, params);\n        return renderNode;\n      };\n      arrayMap(arr, element, arrayMapFn, options.reuseMode);\n    };\n  } else {\n    return function(commentNode) {\n      var element = commentNode.parentElement;\n      arrayMap(arr as any, element, renderCallback);\n    };\n  }\n};\n"],"names":["EventedArray","items","_self","this","_array","defineIndexProperty","index","Object","defineProperty","configurable","enumerable","get","set","v","raiseEvent","type","item","event","_handlers","forEach","h","call","itemadded","itemremoved","itemset","beforemulti","aftermulti","on","eventName","handler","push","off","ln","length","splice","arguments","i","pop","unshift","shift","howMany","removed","value","n","Number","RangeError","apply","Array","getOwnPropertyNames","prototype","name","writable","setEventsFrom","val","toJSON","isArray","const","result","Symbol","innerFn","undefined","slice","hasOwnProperty","arr","innerArray","depends","beforeCompute","compute","toString","fn","cmp","args","insertToDom","parentElement","itemElement","typeOf","document","createTextNode","insertBefore","children","arrayMap","parentDom","renderReturn","reuseMode","parentRef","$val","parentNode","parent","next","nextElementSibling","createDocumentFragment","e","replaceChild","removeChild","firstRenderOnFragment","nextVal","renderedValues","data","createFn","noOp","beforeNode","afterNode","tmp","tail","previousSibling","lastChild","_head","firstChild","head","mode","appendChild","nextSibling","node","textContent","reuseNodes","nextItem","prevItem","key","c_depends","bc_depends","parentFragment","jsRoot","self","window","global","module","Function","htmlProps","id","nodeValue","className","innerHTML","innerText","tabIndex","_templateMode","template","createElement","putCommentToTagStart","htm","comment","p","lastIndexOf","substr","updateNodesByCommentNodes","element","params","commentNodes","treeWalker","createTreeWalker","NodeFilter","SHOW_COMMENT","acceptNode","trim","startsWith","FILTER_ACCEPT","FILTER_REJECT","nextNode","currentNode","walkForCommentNodes","commentNode","commentValue","attributeName","i1","indexOf","i2","commentType","parseInt","paramIndex","param","COMMENT_TEXT","addEventListener","setAttribute","returned","$$symbolObservable","observable","Observer","constructor","handlers","isUnsubscribed","error","unsubscribe","complete","_unsubscribe","Observable","subscribe","_subscribe","obs","observer","obj","defaults","propertyKey","value$","descr","getOwnPropertyDescriptor","isDynamic","endsWith","cloneNode","join","content","renderCallback","options","assign","useCloneNode","clonedNode","dataParamIndexes","renderNode","indexes"],"mappings":"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"}