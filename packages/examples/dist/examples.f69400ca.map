{"version":3,"sources":["../src/context.ts","../src/createElement.ts","views/Main.tsx","index.tsx"],"names":["const","activeContextKeys","appContext","startContext","key","value","push","injectContexts","componentProps","Object","defineProperty","configurable","enumerable","let","i","length","endContext","pop","jsxEventProperty","Fragment","Symbol","htmlProps","id","nodeValue","textContent","className","innerHTML","tabIndex","setElementAttributes","element","attributes","attribute","attributeName","undefined","Function","test","toLowerCase","Array","isArray","addChildElements","name","setAttribute","childs","props","appendChild","Node","document","createTextNode","didMount","tagName","createDocumentFragment","createElement","createElementNS","class","parent","context"],"mappings":"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","file":"examples.f69400ca.map","sourceRoot":"..","sourcesContent":["const activeContextKeys = [];\nconst appContext: { [key: string]: any[] } = {};\n\nexport const startContext = (key: string, value: any) => {\n  if (!appContext[key]) appContext[key] = [];\n  appContext[key].push(value);\n  activeContextKeys.push(key);\n};\n\nexport const getContextValue = (key: string, componentProps: any) => {\n  if (componentProps && componentProps[\"$context\"][key])\n    return componentProps[\"$context\"][key];\n  if (appContext[key]) return appContext[key][appContext[key].length - 1];\n};\n\nexport const injectContexts = (componentProps: any) => {\n  if (!componentProps[\"$context\"])\n    Object.defineProperty(componentProps, \"$context\", {\n      configurable: false,\n      enumerable: false,\n      value: {}\n    });\n  let key = null;\n  for (var i = 0; i < activeContextKeys.length; i++) {\n    key = activeContextKeys[i];\n    componentProps[\"$context\"][key] =\n      appContext[key][appContext[key].length - 1];\n  }\n};\n\nexport const endContext = (key: string) => {\n  appContext[key].pop();\n  activeContextKeys.pop();\n};\n\nexport const activateContext = context => {\n  for (var key in context) startContext(key, context[key]);\n};\n\nexport const deactivateContext = context => {\n  for (var key in context) endContext(key);\n};\n\nexport const Context = (props: { key: string; value: any }) => null;\n","import { injectContexts } from './context';\n\nconst jsxEventProperty = /^on[A-Z]/;\nconst svgNS = 'http://www.w3.org/2000/svg';\nexport const Fragment = Symbol('fidan.Fragment');\nconst htmlProps = {\n\tid: true,\n\tnodeValue: true,\n\ttextContent: true,\n\tclassName: true,\n\tinnerHTML: true,\n\ttabIndex: true,\n\tvalue: true\n};\n\nexport const setElementAttributes = (element: Element, attributes) => {\n\tlet attribute = null;\n\tfor (var attributeName in attributes) {\n\t\tattribute = attributes[attributeName];\n\t\tif (attribute != undefined) {\n\t\t\tif (attribute instanceof Function) {\n\t\t\t\tif (jsxEventProperty.test(attributeName)) {\n\t\t\t\t\tattributeName = attributeName.toLowerCase();\n\t\t\t\t\telement[attributeName] = attribute;\n\t\t\t\t} else attribute(element);\n\t\t\t} else if (attribute instanceof Object) {\n\t\t\t\tif (Array.isArray(attribute)) {\n\t\t\t\t\taddChildElements(element, attribute);\n\t\t\t\t} else {\n\t\t\t\t\tfor (var key in attribute) {\n\t\t\t\t\t\tif (typeof attribute[key] === 'function') attribute[key](element);\n\t\t\t\t\t\telse element[attributeName][key] = attribute[key]; // style like\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (htmlProps[name] === true) element[attributeName] = attribute;\n\t\t\t\telse element.setAttribute(name, attribute);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const createElement = (\n\ttagName: string | Function | Symbol,\n\tattributes: { [key: string]: any },\n\t...childs: any[]\n) => {\n\tlet element = null;\n\tif (tagName instanceof Function) {\n\t\tif (attributes === null) attributes = {};\n\t\tif (childs && childs.length) attributes['children'] = childs;\n\t\tinjectContexts(attributes);\n\t\telement = (tagName as any)(attributes);\n\t\tif (element) element['props$'] = attributes;\n\t} else {\n\t\tif (tagName === Fragment) {\n\t\t\telement = document.createDocumentFragment();\n\t\t} else {\n\t\t\telement = document.createElement(tagName as any);\n\t\t\tattributes && setElementAttributes(element, attributes);\n\t\t}\n\t\telement['props$'] = attributes;\n\t\tchilds && childs.length && addChildElements(element, childs);\n\t}\n\treturn element;\n};\n\nexport const createSvgElement = (tagName: string, attributes: { [key: string]: any }, ...childs: any[]) => {\n\tlet element = document.createElementNS(svgNS, tagName);\n\tif (attributes) {\n\t\tif (attributes.className) {\n\t\t\t// TODO compile time\n\t\t\tattributes.class = attributes.className;\n\t\t\tdelete attributes.className;\n\t\t}\n\t\tsetElementAttributes(element, attributes);\n\t}\n\telement['props$'] = attributes;\n\tchilds && childs.length && addChildElements(element, childs);\n\treturn element;\n};\n\nexport const addChildElements = (element, childs) => {\n\tlet props = null;\n\tfor (var i = 0; i < childs.length; i++) {\n\t\tif (Array.isArray(childs[i])) addChildElements(element, childs[i]);\n\t\telse if (childs[i] instanceof Function) childs[i](element);\n\t\telse {\n\t\t\tif (childs[i]) {\n\t\t\t\tprops = childs[i]['props$'];\n\t\t\t\telement.appendChild(childs[i] instanceof Node ? childs[i] : document.createTextNode(childs[i]));\n\t\t\t\tprops && props.didMount && props.didMount(element, childs[i]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const createTextNode = (parent) => {\n\treturn parent.appendChild(document.createTextNode(''));\n};\n","export const Main = () => {\n\tconst dv1: HTMLElement = null;\n\n\tconst view = <div ref={dv1}>Main View</div>;\n\tconsole.log(dv1);\n\treturn view;\n};\n","import { createElement } from '@fidan/runtime';\nimport { Main } from './views/Main';\nglobal['fidan'] = createElement;\n\nconst mainView = <Main />;\n\nif (process.env.NODE_ENV === 'development') {\n\tif (module['hot']) {\n\t\tmodule['hot'].dispose(() => {\n\t\t\tdocument.body.removeChild(mainView);\n\t\t});\n\t}\n}\n\ndocument.body.appendChild(mainView);\n"]}